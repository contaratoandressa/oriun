rm(list=ls())
install.load::install_load("PortfolioAnalytics", "quantmod", "nnet", "caret", "zoo", "PerformanceAnalytics", "plotly", "dplyr","readxl","writexl","tseries", "moments", "forecast", "polynom", "rugarch", "xts","SkewHyperbolic", "rgl")
# source
path = "/home/andressa/dev/workspace/oriun/functions_aux/"
setwd(path)
source("HGbib_atz2.R")
source("ajud2.R")
source('functions.R')
# Dataset
prices.data = import_data()
var <- names(prices.data)
View(prices.data)
getSymbols(c("BTC-USD"), from=data_init, to=data_end, auto.assign = T)
data_init = '2000-01-01'
data_end = '2020-03-31'
getSymbols(c("BTC-USD"), from=data_init, to=data_end, auto.assign = T)
View(getSymbols(c("BTC-USD"), from=data_init, to=data_end, auto.assign = T))
"BTC-USD"
`BTC-USD`[,6]
names(`BTC-USD`[,6])
names(`BTC-USD`)
# memory and packges
rm(list=ls())
install.load::install_load("PortfolioAnalytics", "quantmod", "nnet", "caret", "zoo", "PerformanceAnalytics", "plotly", "dplyr","readxl","writexl","tseries", "moments", "forecast", "polynom", "rugarch", "xts","SkewHyperbolic", "rgl")
# source
path = "/home/andressa/dev/workspace/oriun/functions_aux/"
setwd(path)
source("HGbib_atz2.R")
source("ajud2.R")
source('functions.R')
# Dataset
prices.data = import_data()
var <- names(prices.data)
# param
percent_train = 0.8
prices.data
name(prices.data)
names(prices.data)
var = "BTC-USD.Adjusted"
data = prices.data[,var]
data = adjust_data(data, var)
data = merge.zoo(`BTC-USD`[,6])
# Obtendo os dados de ações de empresas listadas na bolsa de valores americana
#getSymbols(c("MSFT", "SBUX", "IBM", "AAPL", "^GSPC", "AMZN"), from=data_init, to=data_end, auto.assign = T)
getSymbols(c("BTC-USD", "ETH-USD", "LTC-USD"), from=data_init, to=data_end, auto.assign = T)
data_init = '2000-01-01'
data_end = '2020-03-31'
# Obtendo os dados de ações de empresas listadas na bolsa de valores americana
#getSymbols(c("MSFT", "SBUX", "IBM", "AAPL", "^GSPC", "AMZN"), from=data_init, to=data_end, auto.assign = T)
getSymbols(c("BTC-USD", "ETH-USD", "LTC-USD"), from=data_init, to=data_end, auto.assign = T)
data = merge.zoo(`BTC-USD`[,6])
data
serie <- ts(na.omit(data[,var]),frequency=1)
serie
class(serie <- ts(na.omit(data[,var]),frequency=1))
class(serie)
serie_train <- window(serie,end=c(round(length(serie)*percent_train),1))
serie_test <- window(serie,start=c((round(length(serie)*percent_train)+1),1))
plot(serie,main="Série Temporal da BTC-USD",ylab="Preço",xlab="Dias")
lines(serie_train,col="blue"); lines(serie_test,col="green")
legend("bottomright",col=c("blue","green"),lty=1,legend=c("Training","Testing"))
plot(serie,main="Série Temporal da BTC-USD",ylab="Preço",xlab="Dias")
lines(serie_train,col="blue"); lines(serie_test,col="green")
legend("bottomright",col=c("blue","green"),lty=1,legend=c("Training","Testing"))
adf.test(serie_train,alternative="stationary")
plot(diff(serie), type="l",main="Primeira diferença",ylab="Diferença de preço",xlab="Dias")
modelauto <- auto.arima((serie_train), seasonal=FALSE)
modelauto
accuracy(forecast(modelauto,h=252),msft.test)[2,1:6]
accuracy(forecast(modelauto,h=252),serie_test)[2,1:6]
